import board
import math
import time
import busio
import digitalio
import adafruit_displayio_ssd1306 
import terminalio 
import displayio
import adafruit_display_shapes
from adafruit_display_text import label

def LZ(VX1, VX2, VX3):
       
    LZA = 0.5 * (VX1[0] * (VX2[1] - VX3[1]) + VX2[0] * (VX3[1] - VX1[1]) + VX3[0]* (VX1[1] - VX2[1]))
# this is the formula to find area based off of the coordinates we also could've done this with herrons formula but this is easier because it requires less math
    return abs(LZA)

while True: 
    
    try:
        # point 1 is (VX1[0],VX1[1])
        # point 2 is (VX2[0],VX2[1])
        # point 3 is (VX3[0],VX3[1])
        VX1 = input('Enter X1,Y1:').split(",")
        VX2 = input('Enter X2,Y2:').split(",")
        VX3 = input('Enter X3,Y3:').split(",")

        print(f"The Landing Zone with vertices ({VX1[0]},{VX1[1]}),({VX2[0]},{VX2[1]}),({VX3[0]},{VX3[1]}) is {LZ((int(VX1[0]),int(VX1[1])), (int(VX2[0]),int(VX2[1])), (int(VX3[0]),int(VX3[1])))} square km.")
        # This the print that uses the function that was made above. 
        # It is extremely long because each point had to be indexed here.
    except:
        print("VALUE ERROR PLEASE TRY AGAIN")
        # This throws an error if the user inputs the wrong data.