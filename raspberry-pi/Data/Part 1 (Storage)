import adafruit_mpu6050
import busio
import board
import time
import digitalio

tilt = 0

sda_pin = board.GP14
scl_pin = board.GP15 
i2c = busio.I2C(scl_pin, sda_pin)  
# This is creating the I2C and telling it to use the variables that were defined above.

mpu = adafruit_mpu6050.MPU6050(i2c) 
# Initializes the sensor

led = digitalio.DigitalInOut(board.LED)
led.direction = digitalio.Direction.OUTPUT
# Initializes the Built-In LED

ledred = digitalio.DigitalInOut(board.GP13)
ledred.direction = digitalio.Direction.OUTPUT  
# defines the red LED as an output and sets its pin as GP13 on the Pico

with open("/data.csv", "a") as datalog:

    while True:
        
        RunTime= time.monotonic()

        x = round(mpu.acceleration[0],3)
        y = round(mpu.acceleration[1],3)
        z = round(mpu.acceleration[2],3)

        print(f"x:{x} y:{y} z:{z} tilt:{tilt}")
        # This is an F string which lets us put a variable that is changing in our serial monitor or in a OLED or LCD
        time.sleep(.1)

        if x < 8.5 and x > -8.5 and y < 8.5 and y > -8.5: 
        # using 8.5 puts a deadzone so that the light wont flicker when it is close to 9
            ledred.value = False
            tilt = 0
            time.sleep(.1) 

        if x > 9 or x < -9 or y > 9 or y < -9: 
            ledred.value = True
            tilt = 1
            time.sleep(.1)

        datalog.write( f"{RunTime},{x},{y},{z},{tilt}\n")
          
        datalog.flush()  
        led.value = True
        time.sleep(.1)
        led.value = False
        time.sleep(.1)
